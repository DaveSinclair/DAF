NOW = $(shell date +"20%y%m%d.%H%M%S")

# work out the OS that we are compiling on

OS     := $(word 1,$(shell uname -a))
ifeq ($(OS),Linux)
     dummy := $(info Compiling on Linux - timestamp is $(NOW))
     OS = LINUX
     CFLAGS = -Wall -g 
     CFLAGS1 = -g
     LIBS = -lpthread 
     INCLUDES = -I/usr/include/mysql
     DEFINES = -DUNAME="\"$(shell uname -a)\"" -DBUILDMACHINE="\"$(HOSTNAME)\""  -D_GNU_SOURCE -D_THREAD_SAFE -DLINUX -DDAF_AGENT -DPOLLING_SERVER
endif

ifeq ($(OS),SunOS)
     dummy := $(info Compiling on Solaris - timestamp is $(NOW))
     OS = SOLARIS
     CFLAGS = -Wall -DPORTMAP -DSOLARIS -g
     CFLAGS1 = -g
     LIBS = -lpthread -lsocket -lnsl 
     INCLUDES = -I/usr/include/mysql
     DEFINES = -DUNAME="\"$(shell uname -a)\"" -DBUILDMACHINE="\"$(HOSTNAME)\"" -DSOLARIS -DDAF_AGENT -DPOLLING_SERVER
endif

# check to see if we are running this compile on a 64 bit machine
#CPU     := $(word 12,$(shell uname -a))
#ifeq ($(CPU),x86_64)
#     dummy := $(info Compile machine has $(CPU) architecture)
#else
#     dummy := $(info Compile machine has $(CPU) architecture)
#endif

# check to see if we are running this compile on a 2.6 kernel machine
#KERNEL  := $(word 3,$(shell uname -a))
#KERNEL  := $(shell echo $(KERNEL) | cut -c-3)
#ifeq ($(KERNEL),2.6)
#     dummy := $(info Compile machine has $(KERNEL) kernel - ok to proceed)
#else
#     dummy := $(error Compile machine has $(KERNEL) kernel - 2.6 Kernel machine needed - cannot proceed)
#endif


DAFAGENTOBJ =  dafservice.o dafclient.o daf_util.o OSstuff.o daf_service_environment.o daf_shared_memory.o daf_agent.o daf_protocol_xdr.o daf_threads.o

BINS = daf_agent  
OBJS = $(DAFAGENTOBJ)

GEN = daf_protocol.h daf_protocol_xdr.c
RPCGEN = rpcgen -M
CC = gcc


all: $(GEN) $(OBJS) $(BINS)

daf_agent: $(DAFAGENTOBJ)
	$(CC) $(CFLAGS) $(DEFINES) $(INCLUDES) -o $@ $(DAFAGENTOBJ) ${LIBS}

daf_agent.o: daf.c 
	gcc $(CFLAGS) $(DEFINES) $(INCLUDES) -DDAF_AGENT -o daf_agent.o daf.c -c

dafclient.o: dafclient.c
	gcc $(CFLAGS) $(DEFINES) $(INCLUDES) dafclient.c -c

dafservice.o: dafservice.c 
	gcc $(CFLAGS) $(DEFINES) $(INCLUDES) -DDAF_AGENT dafservice.c -c

daf_service_environment.o: daf_service_environment.c 
	gcc $(CFLAGS) $(DEFINES) $(INCLUDES) -DDAF_AGENT daf_service_environment.c -c

daf_shared_memory.o: daf_shared_memory.c 
	gcc $(CFLAGS) $(DEFINES) $(INCLUDES) daf_shared_memory.c -c

daf_threads.o: daf_threads.c 
	gcc $(CFLAGS) $(DEFINES) $(INCLUDES) daf_threads.c -c

daf_util.o: daf_util.c daf_util.h
	gcc $(CFLAGS) $(DEFINES) $(INCLUDES) daf_util.c -c

OSstuff.o: OSstuff.c OSstuff.h
	gcc $(CFLAGS) $(DEFINES) $(INCLUDES) OSstuff.c -c

daf_protocol.h: daf_protocol.x
	$(RPCGEN) -h daf_protocol.x -o daf_protocol.h 
	
daf_protocol_xdr.c: daf_protocol.x
	$(RPCGEN) -c -o daf_protocol_xdr.c daf_protocol.x

daf_protocol_xdr.o: daf_protocol.h daf_protocol_xdr.c
	${CC} ${CFLAGS} ${DEFINES} -o $@ -c daf_protocol_xdr.c $(INCLUDES) -Wno-unused-variable

email.o: email.c 
	gcc $(CFLAGS) $(DEFINES) $(INCLUDES) email.c -c


clean:
	rm -f $(GEN) $(OBJS) $(BINS)
